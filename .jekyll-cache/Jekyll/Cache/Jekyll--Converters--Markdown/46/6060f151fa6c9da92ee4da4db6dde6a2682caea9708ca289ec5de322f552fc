I"ô<h2 id="tools-for-drones-in-jderobot">Tools for drones in JdeRobot</h2>

<p>The drone can be teleoperated from a smartphone. The images of the onboard cameras are shown in the smartphone</p>

<!-- Courtesy of embedresponsively.com //-->
<div class="responsive-video-container">

  <iframe src="https://www.youtube-nocookie.com/embed/fEuhzmRH-Fs" frameborder="0" allowfullscreen=""></iframe>

</div>

<h2 id="using-rosmavros-with-px4-sitl-and-3dr-solo-simulation-in-gazebo">Using ROS/MavROS with PX4 SITL and 3DR Solo simulation in Gazebo</h2>

<p>Installation instructions <a href="https://github.com/JdeRobot/assets/tree/master/drones">here</a>. Please note that this is a first approach, if you encounter any issues report them in the <a href="https://github.com/jderobot/jderobot">JdeRobot‚Äôs github repository</a>.</p>

<h3 id="stage-1-launching-the-3dr-solo-simulation-testing-basic-functionalities-arm-motors-takeoff-hover-and-land">Stage 1: Launching the 3DR Solo simulation. Testing basic functionalities: Arm motors, takeoff, hover and land</h3>

<ul>
  <li>
    <p>Goal: After installing PX4 SITL for ROS/Gazebo and MavROS 0.25.1, some testing using the 3DR Solo simulation, MavLINK 2.0 and the MavROS tools mavsafety (for arming motors) and mavcmd (for taking off and landing)</p>
  </li>
  <li>
    <p><strong>Status</strong>: Almost finished</p>
  </li>
  <li>
    <p><strong>Achieved</strong>:</p>

    <ol>
      <li>Link between PX4 SITL and MavROS node obtained:
        <ul>
          <li>Use <code class="highlighter-rouge">roslaunch mavros px4.launch fcu_url:="udp://:14540@127.0.0.1:14557"</code></li>
          <li>Link working checked by echoing the <code class="highlighter-rouge">/mavros/diagnostics</code> topic</li>
        </ul>
      </li>
      <li>Arm 3DR Solo motors with <code class="highlighter-rouge">rosrun mavros mavsafety arm</code>.</li>
      <li>Take off in <code class="highlighter-rouge">PX4 AUTO.RTL</code> flight mode
        <ul>
          <li>Using global latitude,longitude coordinates (LOCAL_NED frame) available at /mavros/fake_gps/geo_origin parameters</li>
          <li>Use <code class="highlighter-rouge">rosrun mavros mavcmd takeoff pitch yaw lat lon alt</code>. Important: <code class="highlighter-rouge">rosrun mavros mavcmd takeoffcur pitch yaw alt</code> doesn‚Äôt work (GPS fix is compulsory)</li>
        </ul>
      </li>
    </ol>
  </li>
  <li>
    <p><strong>Pending</strong>:</p>

    <ul>
      <li>Keep drone hovering by solving the No Datalink issue, that triggers failsafe and RTH + Auto Landing</li>
      <li>Tried changing PX4 flight mode from AUTO.RTL to OFFBOARD. PX4 present flight mode is published in the /mavros/state topic.</li>
      <li>To change it, first publish any <code class="highlighter-rouge">/mavros/setpoint</code> with <code class="highlighter-rouge">rostopic pub -r 20 ...</code> and then use <code class="highlighter-rouge">rosrun mavros mavsys mode -c OFFBOARD</code>.</li>
      <li>Unfortunately, once in OFFBOARD mode, RTH still triggers due to <em>No Datalink</em>.</li>
      <li>Possible solution: Try changing NAV_RCL_ACT parameter to 0.</li>
    </ul>
  </li>
</ul>

<!-- Courtesy of embedresponsively.com //-->
<div class="responsive-video-container">

  <iframe src="https://www.youtube-nocookie.com/embed/wiVFPPJuaow" frameborder="0" allowfullscreen=""></iframe>

</div>

<h2 id="stage-2-use-offboard-px4-mode-keep-drone-hovering-land-safely">Stage 2: Use OFFBOARD PX4 Mode. Keep drone hovering. Land safely.</h2>

<ul>
  <li>
    <p><strong>Goal</strong>: Find the right sequence of mavROS commands to enter OFFBOARD Mode, take off, keep drone hovering for a while and land safely. In OFFBOARD PX4 mode, the drone obeys a position, velocity or attitude setpoint provided over MAVLink by an ‚Äúexternal‚Äù computer. The main characteristics of OFFBOARD mode can be found <a href="https://docs.px4.io/en/flight_modes/offboard.html">here</a>.</p>
  </li>
  <li>
    <p><strong>Status</strong>: Finished</p>
  </li>
  <li>
    <p><strong>Achieved</strong>: The right sequence of commands to enter OFFBOARD mode is as follows:</p>

    <ol>
      <li>The drone must receive a stream of target setpoints at a rate greater than 2 Hz before entering OFFBOARD mode. Run first <code class="highlighter-rouge">rostopic pub -r 20 /mavros/setpoint_position/local...</code> and include a PoseStamped ROS message with the local height (for example: <code class="highlighter-rouge">x=0 y=0 z=2</code>).</li>
      <li>The drone must be armed before engaging OFFBOARD. Run <code class="highlighter-rouge">rosrun mavros mavsafety arm</code>.</li>
      <li>Engage OFFBOARD mode by <code class="highlighter-rouge">rosrun mavros mavsys mode -c OFFBOARD</code>. The drone will then take off (see the <em>Note</em> below)</li>
      <li>Send other setpoints, if any, using the right ROS topics (position, velocity, attitude)</li>
      <li>Land using <code class="highlighter-rouge">rosrun mavros mavcmd land 0 0 0 0</code> . The drone exits OFFBOARD mode and enters AUTO.LAND mode</li>
    </ol>

    <p><em>Note</em>: This is not the only way of doing it. The taking off sequence, can be done by first taking off and then enter OFFBOARD mode, but there is a risk of triggering RTH due to the No Datalink issue.</p>
  </li>
</ul>

<!-- Courtesy of embedresponsively.com //-->
<div class="responsive-video-container">

  <iframe src="https://www.youtube-nocookie.com/embed/FPX13Ks5xmA" frameborder="0" allowfullscreen=""></iframe>

</div>

<h3 id="stage-3-using-relative-cmd_vel-velocity-commands-in-offboard-mode">STAGE 3: Using relative cmd_vel velocity commands in OFFBOARD mode.</h3>

<ul>
  <li>
    <p><strong>Goal</strong>: Test cmd_vel relative velocity commands by changing the PX4 FRAME from LOCAL_NED to BODY_FRAME. Available mavlink frames are listed <a href="https://github.com/mavlink/mavros/blob/master/mavros_msgs/srv/SetMavFrame.srv">here</a>.</p>
  </li>
  <li>
    <p><strong>Status</strong>: Ongoing.</p>
  </li>
  <li>
    <p><strong>Achieved</strong>: Relative velocity commands are feasible in MavROS!</p>

    <ol>
      <li>Key: changing the PX4 FRAME to BODY_FRAME using <code class="highlighter-rouge">rosservice call /mavros/setpoint_velocity/mav_frame "mav_frame: 8"</code></li>
      <li>After that, take off in OFFBOARD mode using the procedures available below (in STAGE 2)</li>
      <li>The drone will read the velocity setpoints sent by publishing a cmd_vel ‚ÄúTwist‚Äù ROS message at the /mavros/setpoint_velocity/cmd_vel_unstamped/ topic as ‚Äúrelative‚Äù velocities (i.e. as given in its local reference frame)</li>
    </ol>

    <p>In the example below, a circular trajectory is proven just by using linear_vx=1 + angular_vz=1, with all other speed components = 0</p>
  </li>
</ul>
:ET