I"¤<h2 id="introduction">Introduction</h2>

<p>This tool allows to program complex robots like TurtleBot or drones with the visual language Scratch. Regular blocks from Scratch can be used in applications with Scratch2JdeRobot. In addition several blocks for some robots have been also created and can be included in the applications.</p>

<!-- Courtesy of embedresponsively.com //-->
<div class="responsive-video-container">

  <iframe src="https://www.youtube-nocookie.com/embed/gT-qt0Opwb4" frameborder="0" allowfullscreen=""></iframe>

</div>

<h3 id="blocks-included-in-scratch">Blocks included in Scratch</h3>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Wait () secs</td>
      <td>Control Block</td>
      <td>Pauses the script for the amount of time.</td>
    </tr>
    <tr>
      <td>Forever</td>
      <td>Control Block</td>
      <td>A loop that will never end.</td>
    </tr>
    <tr>
      <td>if () then</td>
      <td>Control Block</td>
      <td>Checks the condition so that if the condition is true, the blocks inside it will activate.</td>
    </tr>
    <tr>
      <td>if () Then, Else</td>
      <td>Control Block</td>
      <td>Checks the condition so that if the condition is true, the blocks inside the first C will activate and if the condition is false, the blocks inside the second C will activate.</td>
    </tr>
    <tr>
      <td>Repeat ()</td>
      <td>Control Block</td>
      <td>A loop that repeats the specified amount of times.</td>
    </tr>
    <tr>
      <td>say ()</td>
      <td>Looks blocks</td>
      <td>Print what you enter as parameter.</td>
    </tr>
    <tr>
      <td>Set () to ()</td>
      <td>Variable blocks</td>
      <td>Sets the specified variable to the amount.</td>
    </tr>
    <tr>
      <td>Insert () at () of ()</td>
      <td>List blocks</td>
      <td>Insert item in the selected position of indicated list.</td>
    </tr>
    <tr>
      <td>Item () of ()</td>
      <td>List blocks</td>
      <td>Returns the item stored in the indicated position.</td>
    </tr>
    <tr>
      <td>Add () to ()</td>
      <td>List blocks</td>
      <td>Insert item in the list.</td>
    </tr>
    <tr>
      <td>Delete () of ()</td>
      <td>List blocks</td>
      <td>Remove the item stored in the indicated position.</td>
    </tr>
  </tbody>
</table>

<h3 id="blocks-for-drones">Blocks for drones</h3>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Inputs</th>
      <th>Outputs</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Pose3D</td>
      <td>Perceptive</td>
      <td>Â </td>
      <td>XYZ Position</td>
      <td>Get the value of the robot 3D position.</td>
    </tr>
    <tr>
      <td>Color detection</td>
      <td>Perceptive</td>
      <td>Color</td>
      <td>SIZEimg, Ximg, Yimg</td>
      <td>Colored object in image.</td>
    </tr>
    <tr>
      <td>Stop robot</td>
      <td>Motion</td>
      <td>Â </td>
      <td>Â </td>
      <td>Reset all velocity values.</td>
    </tr>
    <tr>
      <td>Drone Take Off</td>
      <td>Motion</td>
      <td>Â </td>
      <td>Â </td>
      <td>Makes the drone take off.</td>
    </tr>
    <tr>
      <td>Drone Land</td>
      <td>Motion</td>
      <td>Â </td>
      <td>Â </td>
      <td>Makes the drone land.</td>
    </tr>
    <tr>
      <td>Drone Move</td>
      <td>Motion</td>
      <td>direction: (forward, back, up, down, left, right), speed: {velocity (integer)}</td>
      <td>Â </td>
      <td>Gives the drone a speed in the indicated direction.</td>
    </tr>
    <tr>
      <td>Drone Turn</td>
      <td>Motion</td>
      <td>direction: (left, right), speed: {velocity (integer)}</td>
      <td>Â </td>
      <td>Gives the drone a turning speed in the indicated direction.</td>
    </tr>
  </tbody>
</table>

<h3 id="blocks-for-turtlebot">Blocks for TurtleBot</h3>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Type</th>
      <th>Inputs</th>
      <th>Outputs</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Pose3D</td>
      <td>Perceptive</td>
      <td>Â </td>
      <td>XYZ Position</td>
      <td>Get the value of the robot 3D position.</td>
    </tr>
    <tr>
      <td>Color detection</td>
      <td>Perceptive</td>
      <td>Color</td>
      <td>SIZEimg, Ximg, Yimg</td>
      <td>Colored object in image.</td>
    </tr>
    <tr>
      <td>Frontal Distance</td>
      <td>Perceptive</td>
      <td>Â </td>
      <td>The average measure of the frontal laser data</td>
      <td>Get the average value for the values of the frontal laser</td>
    </tr>
    <tr>
      <td>Robot Move</td>
      <td>Motion</td>
      <td>direction: (forward, back, left, right); speed: (integer)</td>
      <td>Â </td>
      <td>Gives a speed in the indicated direction</td>
    </tr>
    <tr>
      <td>Robot Turn</td>
      <td>Motion</td>
      <td>direction: (left, right); speed: (integer)</td>
      <td>Â </td>
      <td>Gives a turning speed in the indicated direction</td>
    </tr>
    <tr>
      <td>Drone Move to Position</td>
      <td>Motion</td>
      <td>direction: (forward, back, left, right); meter: (integer)</td>
      <td>Â </td>
      <td>Move robot the indicated meters in one direction</td>
    </tr>
  </tbody>
</table>

<h2 id="prerequisites">Prerequisites</h2>

<h3 id="scratch-20">Scratch 2.0</h3>

<p>Download the scratch file <a href="https://scratch.mit.edu/scratchr2/static/sa/Scratch-456.0.2.air">from here</a> and then double click to install it.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget <span class="nt">-O</span> adobe-air.sh http://drive.noobslab.com/data/apps/AdobeAir/adobe-air.sh
<span class="nb">chmod</span> +x adobe-air.sh<span class="p">;</span> <span class="nb">sudo</span> ./adobe-air.sh
</code></pre></div></div>

<h3 id="ros">ROS</h3>

<p><a href="http://wiki.ros.org/kinetic/Installation/Ubuntu">Follow the ROS tutorial installation</a>.</p>

<h3 id="python-requirements">Python requirements</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/JdeRobot/Scratch4Robots
<span class="nb">cd </span>Scratch4Robots
pip <span class="nb">install</span> <span class="nt">-r</span> requirements.txt
</code></pre></div></div>

<h3 id="gazebo-and-worlds">Gazebo and worlds</h3>

<p>Follow the <a href="http://gazebosim.org/tutorials?tut=install_ubuntu">Gazebo tutorial installation</a>.</p>

<p>With this line we get some prepared worlds based on ROS ready to use:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt-get <span class="nb">install </span>ros-<span class="k">${</span><span class="nv">ROS_DISTRO</span><span class="k">}</span><span class="nt">-kobuki-gazebo</span>
</code></pre></div></div>

<h2 id="installing">Installing</h2>

<p>Check out the full installation video.</p>

:ET